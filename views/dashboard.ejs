<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<!--<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">-->
<link href="https://fonts.googleapis.com/css?family=Public+Sans:300,500&display=swap" rel="stylesheet">

<title>Document</title>
<style>
    #link {
        cursor: pointer;
    }
</style>
</head>

<body>
    <div class="header">
        <div class="conteneur"><a href="/users/logout"><img class="deco_button"
                    src="../img/logoutlogo-removebg.png"></a></div>
        <!--<a href="/users/logout" class="deco">Déconnexion</a>-->
        <h1 id='title'>Bonjour <%= user.charAt(0).toUpperCase() + user.slice(1) %> - Portail Chef de Projet
        </h1>
        <img src="../img/logo success lab 2.jpg" class="img_logo">
    </div>

    <div class="container-fluid mt-3">

        <!-- jumbotron -->
        <div id="titre_repo" class="jumbotron jumbotron-fluid bg-info text-white">
            <div class="container-fluid">
                <h1 class="display-5">Repertoires Github</h1>
            </div>
        </div>
        <!-- responsive table -->
        <div class="table-responsive">
            <table id="dataTable" class="table table-bordered">
                <thead>
                    <tr class="table-info">
                        <th scope="col">ID</th>
                        <th scope="col">Name</th>
                        <th scope="col">URL</th>
                        <th scope="col">Languages</th>
                        <th scope="col">Contributors</th>
                    </tr>
                </thead>
                <tbody id="tbody">
                </tbody>
            </table>

        </div>

        <div id="titre_repo" class="jumbotron jumbotron-fluid bg-info text-white2">
            <div class="container-fluid">
                <h1 class="display-5">Projets analysés</h1>
            </div>
        </div>

        <div class="table-responsive">
            <table id="dataTable2" class="table table-bordered">
                <thead>
                    <tr class="table-info">
                        <th scope="col">Name</th>
                        <th scope="col">Date</th>
                    </tr>
                </thead>
                <tbody id="tbody2">
                </tbody>
            </table>

        </div>
    </div>
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>

        let title = document.getElementById('title').innerHTML
        let name = title.split(' ')[1].replace('\n', '')
        console.log('"' + name + '"')



        /* axios.get('http://localhost:4000/csv?username=' + name + '&projectName=NutriHealthy').then(result => {
             console.log("CSV", result.data)
         })*/

        async function getEmailUser(name) {
            let result = await axios.get('http://localhost:4000/users')
            for (const user of result.data) {
                if (name === user.name) return user.email
            }

        }


        async function getProjects(name) {
            let result = await axios.get(
                `https://api.github.com/users/` + name + `/repos`
            );

            return result;
        }

        async function getProjectsNames() {
            let result = await axios.get(`/projects`, {
                params: {
                    username: name
                }
            });

            return result;
        }


        getProjectsNames().then(res => {
            for (const project of res.data) {
                const ligne = document.createElement("tr");

                const td = document.createElement("td");
                td.innerHTML = project[0];
                td.setAttribute("id", "link");

                td.onclick = async () => {

                    await axios.get('http://localhost:4000/csv?username=' + name + '&projectName=' + project[0]).then(result => {
                        console.log("CSV", result.data)
                    })

                    let result = await axios.get('http://localhost:4000/users')
                    let user = result.data
                    user.forEach(element => {


                        if (name === element.name) {
                            axios.post('http://localhost:4000/email', { email: element.email })
                            return
                        }

                    });

                }

                const td2 = document.createElement("td");
                td2.innerHTML = project[1];

                ligne.appendChild(td);
                ligne.appendChild(td2);

                const tbody = document.getElementById("tbody2");
                tbody.appendChild(ligne);
            }
        })


        getProjects(name).then(async (response) => {

            let languages = [];
            let contributors = [];

            let i = 0;
            for (const iterator of response.data) {
                let result = await fetch(iterator.languages_url);
                let l = await result.json();

                let getLanguages = Object.getOwnPropertyNames(l);
                languages.push(getLanguages);

                let collaborateur = await fetch(iterator.contributors_url);
                let test = await collaborateur.json();
                let login = [];
                for (const pseudo of test) {
                    login.push(pseudo.login);
                    login.join("");
                }

                contributors.push(login);

                const ligne = document.createElement("tr");
                ligne.setAttribute("id", "test");

                const td = document.createElement("td");
                td.innerHTML = iterator.id;

                const td2 = document.createElement("td");
                td2.innerHTML = iterator.name;

                const td3 = document.createElement("td");
                td3.innerHTML = iterator.html_url;

                const td4 = document.createElement("td");
                td4.innerHTML = languages[i];

                const td5 = document.createElement("td");
                td5.innerHTML = contributors[i];

                ligne.appendChild(td);
                ligne.appendChild(td2);
                ligne.appendChild(td3);
                ligne.appendChild(td4);
                ligne.appendChild(td5);

                const tbody = document.getElementById("tbody");
                tbody.appendChild(ligne);
                i++;
            }
        })

    </script>
</body>


</html>


<style scoped>
    .header {
        display: flex;
        flex-direction: row-reverse;
        justify-content: space-around;
        align-items: center;
        font-family: sans-serif;
        padding-bottom: 25px;
    }

    #title {
        color: #3d6c9c;
        font-weight: normal;

    }

    .img_logo {
        height: 100px;
        width: 125px;
    }

    .deco_button {
        height: 30px;
        width: 30px;
    }

    #titre_repo {
        color: #3d6c9c;
        font-family: sans-serif;
        padding-bottom: 0px;
        padding-top: 35px;
        font-weight: normal;

    }

    * {
        font-family: sans-serif;
    }

    .table-responsive {
        border-collapse: collapse;
        margin: 25px 0;
        font-size: 0.9em;
        min-width: 400px;
        border-radius: 20px 20px 20px 20px;
        overflow: hidden;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
    }

    .table-responsive thead tr {
        background-color: #f48c16;
        color: #ffffff;
        text-align: left;
        font-weight: bold;
    }

    .table-responsive th,
    .table-responsive td {
        padding: 12px 15px;
    }

    .table-responsive tbody tr {
        border-bottom: 1px solid #dddddd;
    }

    .table-responsive tbody tr:nth-of-type(even) {
        background-color: #f3f3f3;
    }

    .table-responsive tbody tr:last-of-type {
        border-bottom: 2px solid #f48c16;
    }

    .table-responsive tbody tr.active-row {
        font-weight: bold;
        color: #009879;
    }
</style>